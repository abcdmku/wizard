name: Deploy Documentation to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - 'packages/docs/**'
      - '.github/workflows/deploy-docs.yml'
      - 'packages/core/**'
      - 'packages/react/**'
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: 'pnpm'
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          static_site_generator: next
          
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          echo "Current directory: $(pwd)"
          echo "Files in directory:"
          ls -la
          echo "Attempting install with --no-frozen-lockfile due to CI environment"
          pnpm install --no-frozen-lockfile

      - name: Build core packages
        run: |
          echo "Building core packages first..."
          pnpm --filter @wizard/core build
          pnpm --filter @wizard/react build

      - name: Build documentation
        run: |
          echo "Building documentation..."
          cd packages/docs
          rm -rf .next out node_modules/.cache public/api
          cd ../..
          echo "Running docs build with API generation..."
          pnpm --filter @wizard/docs build
        env:
          NODE_ENV: production
          GITHUB_ACTIONS: true
          GITHUB_REPOSITORY: ${{ github.repository }}
          NEXT_PUBLIC_GITHUB_REPO_URL: https://github.com/${{ github.repository }}

      - name: Verify build output
        run: |
          echo "Verifying build output..."
          ls -la packages/docs/out/
          echo "Files in out directory:"
          find packages/docs/out -type f | head -10
          echo "Checking for API documentation:"
          ls -la packages/docs/out/api/ || echo "API docs directory not found in output"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./packages/docs/out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4