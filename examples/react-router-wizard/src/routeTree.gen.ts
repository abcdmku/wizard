/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CheckoutRouteImport } from './routes/checkout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CheckoutShippingRouteImport } from './routes/checkout/shipping'
import { Route as CheckoutReviewRouteImport } from './routes/checkout/review'
import { Route as CheckoutPaymentRouteImport } from './routes/checkout/payment'
import { Route as CheckoutAccountRouteImport } from './routes/checkout/account'

const CheckoutRoute = CheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutShippingRoute = CheckoutShippingRouteImport.update({
  id: '/shipping',
  path: '/shipping',
  getParentRoute: () => CheckoutRoute,
} as any)
const CheckoutReviewRoute = CheckoutReviewRouteImport.update({
  id: '/review',
  path: '/review',
  getParentRoute: () => CheckoutRoute,
} as any)
const CheckoutPaymentRoute = CheckoutPaymentRouteImport.update({
  id: '/payment',
  path: '/payment',
  getParentRoute: () => CheckoutRoute,
} as any)
const CheckoutAccountRoute = CheckoutAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => CheckoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutRouteWithChildren
  '/checkout/account': typeof CheckoutAccountRoute
  '/checkout/payment': typeof CheckoutPaymentRoute
  '/checkout/review': typeof CheckoutReviewRoute
  '/checkout/shipping': typeof CheckoutShippingRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutRouteWithChildren
  '/checkout/account': typeof CheckoutAccountRoute
  '/checkout/payment': typeof CheckoutPaymentRoute
  '/checkout/review': typeof CheckoutReviewRoute
  '/checkout/shipping': typeof CheckoutShippingRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutRouteWithChildren
  '/checkout/account': typeof CheckoutAccountRoute
  '/checkout/payment': typeof CheckoutPaymentRoute
  '/checkout/review': typeof CheckoutReviewRoute
  '/checkout/shipping': typeof CheckoutShippingRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/checkout'
    | '/checkout/account'
    | '/checkout/payment'
    | '/checkout/review'
    | '/checkout/shipping'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/checkout'
    | '/checkout/account'
    | '/checkout/payment'
    | '/checkout/review'
    | '/checkout/shipping'
  id:
    | '__root__'
    | '/'
    | '/checkout'
    | '/checkout/account'
    | '/checkout/payment'
    | '/checkout/review'
    | '/checkout/shipping'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CheckoutRoute: typeof CheckoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout/shipping': {
      id: '/checkout/shipping'
      path: '/shipping'
      fullPath: '/checkout/shipping'
      preLoaderRoute: typeof CheckoutShippingRouteImport
      parentRoute: typeof CheckoutRoute
    }
    '/checkout/review': {
      id: '/checkout/review'
      path: '/review'
      fullPath: '/checkout/review'
      preLoaderRoute: typeof CheckoutReviewRouteImport
      parentRoute: typeof CheckoutRoute
    }
    '/checkout/payment': {
      id: '/checkout/payment'
      path: '/payment'
      fullPath: '/checkout/payment'
      preLoaderRoute: typeof CheckoutPaymentRouteImport
      parentRoute: typeof CheckoutRoute
    }
    '/checkout/account': {
      id: '/checkout/account'
      path: '/account'
      fullPath: '/checkout/account'
      preLoaderRoute: typeof CheckoutAccountRouteImport
      parentRoute: typeof CheckoutRoute
    }
  }
}

interface CheckoutRouteChildren {
  CheckoutAccountRoute: typeof CheckoutAccountRoute
  CheckoutPaymentRoute: typeof CheckoutPaymentRoute
  CheckoutReviewRoute: typeof CheckoutReviewRoute
  CheckoutShippingRoute: typeof CheckoutShippingRoute
}

const CheckoutRouteChildren: CheckoutRouteChildren = {
  CheckoutAccountRoute: CheckoutAccountRoute,
  CheckoutPaymentRoute: CheckoutPaymentRoute,
  CheckoutReviewRoute: CheckoutReviewRoute,
  CheckoutShippingRoute: CheckoutShippingRoute,
}

const CheckoutRouteWithChildren = CheckoutRoute._addFileChildren(
  CheckoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CheckoutRoute: CheckoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
